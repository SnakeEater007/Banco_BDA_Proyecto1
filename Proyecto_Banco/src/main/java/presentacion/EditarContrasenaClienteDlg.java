/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import dominio.Cliente;
import encriptador.Encriptador;
import excepciones.PersistenciaException;
import interfaces.IClienteDAO;
import java.awt.Frame;
import javax.swing.JOptionPane;

/**
 * Formulario que se encarga de editar la contrasena del cliente
 *
 * @author Edgar Emir Borbon Jimenez 00000233184
 * @author Daniel Armando Peña García 000000229185
 *
 */
public class EditarContrasenaClienteDlg extends javax.swing.JFrame {

    Frame editarDatosCliente;
    IClienteDAO clienteDAO;
    Cliente cliente;
    Encriptador e = new Encriptador();

    /**
     * Contructor
     *
     * @param editarDatosCliente ventana en la que fue invocado el formulario
     * @param clienteDAO control del clienteDAO
     * @param cliente cliente al que se le editara
     */
    public EditarContrasenaClienteDlg(Frame editarDatosCliente, IClienteDAO clienteDAO, Cliente cliente) {
        this.editarDatosCliente = editarDatosCliente;
        this.clienteDAO = clienteDAO;
        this.cliente = cliente;
        initComponents();
        this.setVisible(true);
    }

    /**
     * Metodo que se encarga de recolectar los datos del formulario
     *
     * @return un String con la contrasena
     */
    private String capturarDatos() {
        String con1 = txtCon1.getText();
        String con2 = txtCon1.getText();
        if (con1.compareTo(con2) == 0) {
            return con1;
        } else {
            return null;
        }
    }

    /**
     * Se encarga de llevar acabo la actualizacion
     *
     * @return true si se hizo con exito, false en caso contrario
     */
    private boolean actualizar() {

        String con = capturarDatos();
        if (con != null) {
            try {
                con = e.encriptar(con);
                clienteDAO.actualizarContrasena(cliente.getId(), con);
                return true;
            } catch (PersistenciaException ex) {
                JOptionPane.showMessageDialog(this, "Error no se pudo actualizar", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        return false;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCon1 = new javax.swing.JTextField();
        txtCon2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAtras = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtCon1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtCon2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtCon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCon2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Nueva Contraseña");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Confirmar");

        btnAtras.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnAtras.setText("Atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(btnActualizar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtCon1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addComponent(txtCon2)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCon2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtras)
                    .addComponent(btnActualizar))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCon2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCon2ActionPerformed

    /**
     * Boton que se encarga de regresar a la ventana anterior
     *
     * @param evt ...
     */
    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        editarDatosCliente.setVisible(true);
        dispose();

    }//GEN-LAST:event_btnAtrasActionPerformed
    /**
     * Boton que ejecuta la actualizacion
     *
     * @param evt ...
     */
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        if (actualizar()) {
            JOptionPane.showMessageDialog(this, "Actualizacion exitosa", "Actualizacion", JOptionPane.INFORMATION_MESSAGE);
            editarDatosCliente.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAtras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtCon1;
    private javax.swing.JTextField txtCon2;
    // End of variables declaration//GEN-END:variables
}
